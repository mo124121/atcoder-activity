S = input()
K = int(input())

U = []
c = 0
for i in range(len(S) - 1):
    c += 1
    if S[i] != S[i + 1]:
        U.append(c)
        c = 0
U.append(c + 1)

if len(U) == 1:
    print(U[0] * K // 2)
    exit()

ret = 0
for u in U:
    ret += u // 2
ret *= K

if S[0] == S[-1]:
    ret -= (U[0] // 2 + U[-1] // 2 - (U[0] + U[-1]) // 2) * (K - 1)

print(ret)

"""
考察

場合分け多そう
基本的には3連続している所は1回買えれば良い
2連続のところは1回
m連続 -> m//2回

問題はエッジ
ループするケースとそうじゃないケースで分ける
0ループ目:S0=S
途中: S1=S+S[0]
最後ループ: 
  前の文字と同じケース: if S[0]==S[-1] S2=S[1:]
  前の文字と違うケース: if S[0]!=S[-1] S2=S


解説後
基本はm//2でいい
最初と最後が同じ時だけ調整していく、調整回数の係数=隣接個数=K-1
別々で数えたときと連結して数えたときの差分をとるイメージ
"""
