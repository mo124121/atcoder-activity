N, K, M, R = map(int, input().split())
S = [0] * (N - 1)
for i in range(N - 1):
    S[i] = int(input()) - R

S.sort(reverse=True)

sum_k_1 = sum(S[: K - 1])
if N - 1 >= K and sum_k_1 + S[K - 1] >= 0:
    print(0)
else:
    if R - sum_k_1 > M:
        print(-1)
    else:
        print(max(R - sum_k_1, 0))

"""
既に超えてる場合とそうでない場合の場合分け必要そう
逆に届かない場合もある

平均でRを超えるか？->要素からRを引いた後の合計が0以上か？

N<100と小さいので、
-ソート
-上位Kのsum>=0か？
-上記K-1の-sumが答えだが、R-sum>Mならどうしようもない

WA 8/94
コーナーケースの考慮が足りていない感

少し整理する
-K個で満たす場合
-k個で満たさない場合
 - 合計が最後のテストで増やせる量より大きい場合
 - そうでもない場合

WA 17/94 増えてる

REがでたりしてたことを考える
今回REがでそうなのは添え字
NとKの関係
N=Kの時の考慮は足りている？


-N-1>=Kで既に与えられているもので平均点が構成でき、　かつ　K個で満たす場合
-そうでもない場合
 - 合計が最後のテストで増やせる量より大きい場合
 - そうでもない場合

"""
