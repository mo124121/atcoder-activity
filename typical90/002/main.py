#!/usr/bin/env python3
import sys

from itertools import product
from collections import deque

def solve(N: int):
    if N%2!=0:
        return
    stack=deque()
    ret=[]
    for pat in product(("(",")"),repeat=N):
        flag=True
        for p in pat:
            if p =="(":
                stack.append(p)
            else:
                if len(stack)==0:
                    flag=False
                    break
                stack.pop()
        if len(stack)!=0:
            flag=False
        if flag:
            ret.append(''.join(pat))
        stack.clear()
    print(*ret,sep="\n")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
