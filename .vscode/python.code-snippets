{
	// Place your atcoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"single int input": {
		"prefix": [
			"sii"
		],
		"body": [
			"${1:N}=int(input())"
		],
		"description": "single input"
	},
	"multi int input": {
		"prefix": [
			"mii"
		],
		"body": [
			"${1:A,B}=map(int,input().split())"
		],
		"description": "multi int input"
	},
	"int array": {
		"prefix": [
			"ia"
		],
		"body": [
			"${1:A}=list(map(int,input().split()))"
		],
		"description": "int array"
	},
	"multi string input": {
		"prefix": [
			"msi"
		],
		"body": [
			"=[list(input()) for _ in range(${1:N})]"
		],
		"description": "multi string input"
	},
	"graph": {
		"prefix": [
			"graph"
		],
		"body": [
			"from collections import defaultdict",
			"",
			"G=defaultdict(list)",
			"for i,j in zip(${1:B},${2:C}):",
			"    G[i].append(j)",
			"    G[j].append(i)"
		],
		"description": "graph"
	}
}