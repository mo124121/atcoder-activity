{
    "gcd": {
        "scope": "rust",
        "prefix": "gcd",
        "body": [
            "fn gcd(a: u64, b: u64) -> u64 {",
            "    if b == 0 {",
            "        a",
            "    } else {",
            "        gcd(b, a % b)",
            "    }",
            "}"
        ]
    },
    "bisect": {
        "scope": "rust",
        "prefix": "bisect",
        "body": [
            "fn binary_search<P>(ok: i64, ng: i64, p: P) -> i64",
            "where",
            "P: Fn(i64) -> bool,",
            "{",
            "    let mid = (ok + ng) / 2;",
            "    if (ok - ng).abs() == 1 {",
            "        ok",
            "    } else if p(mid) {",
            "        binary_search(mid, ng, p)",
            "    } else {",
            "        binary_search(ok, mid, p)",
            "    }",
            "}",
            "let i = binary_search(X() as i64, -1, |i| X[i as usize] < a) as usize;"
        ]
    }
}